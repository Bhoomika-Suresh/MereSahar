<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title><%= title %></title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link rel="icon" type="image/x-icon" href="/images/favicon.ico">

  <!-- Fonts -->
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <!-- Icons -->
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">

  <style>
    :root {
      --primary: #0078d7;
      --primary-light: #e3f2fd;
      --secondary: #ff6b6b;
      --success: #2ecc71;
      --warning: #f39c12;
      --info: #3498db;
      --dark: #2d3436;
      --light: #f8f9fa;
      --gray: #6c757d;
      --bg: #f0f4f9;
      --card-bg: #fff;
      --shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
      --shadow-hover: 0 8px 24px rgba(0, 0, 0, 0.12);
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: "Poppins", sans-serif;
    }

    body {
      background: var(--bg);
      padding: 20px;
      color: var(--dark);
      line-height: 1.6;
    }

    .container {
      max-width: 1400px;
      margin: 0 auto;
    }

    /* Header */
    .header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 30px;
      flex-wrap: wrap;
      gap: 15px;
    }

    h1 {
      color: var(--primary);
      font-size: 2.2rem;
      font-weight: 700;
      display: flex;
      align-items: center;
      gap: 10px;
    }

    h1 i {
      color: var(--secondary);
    }

    .admin-info {
      display: flex;
      align-items: center;
      gap: 15px;
      flex-wrap: wrap;
    }

    .admin-welcome {
      background: var(--primary-light);
      padding: 8px 15px;
      border-radius: 20px;
      font-weight: 500;
    }

    .nav-buttons {
      display: flex;
      gap: 10px;
    }

    .btn {
      padding: 8px 16px;
      border: none;
      border-radius: 8px;
      text-decoration: none;
      font-weight: 500;
      transition: all 0.3s ease;
      display: inline-flex;
      align-items: center;
      gap: 5px;
      cursor: pointer;
    }

    .btn-primary {
      background: var(--primary);
      color: white;
    }

    .btn-secondary {
      background: var(--secondary);
      color: white;
    }

    .btn:hover {
      transform: translateY(-2px);
      box-shadow: var(--shadow-hover);
    }

    /* Summary Cards */
    .cards {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
      gap: 20px;
      margin-bottom: 40px;
    }

    .card {
      background: var(--card-bg);
      border-radius: 16px;
      padding: 25px;
      text-align: center;
      box-shadow: var(--shadow);
      transition: transform 0.3s ease, box-shadow 0.3s ease;
      position: relative;
      overflow: hidden;
    }

    .card::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: 4px;
      background: var(--primary);
    }

    .card:nth-child(2)::before { background: var(--warning); }
    .card:nth-child(3)::before { background: var(--info); }
    .card:nth-child(4)::before { background: var(--success); }
    .card:nth-child(5)::before { background: var(--secondary); }

    .card:hover {
      transform: translateY(-5px);
      box-shadow: var(--shadow-hover);
    }

    .card-icon {
      font-size: 2.5rem;
      margin-bottom: 15px;
      color: var(--primary);
    }

    .card-value {
      font-size: 2.2rem;
      font-weight: 700;
      margin: 10px 0;
      color: var(--dark);
    }

    .card-label {
      font-size: 1rem;
      color: var(--gray);
      font-weight: 500;
    }

    .card-description {
      font-size: 0.85rem;
      color: var(--gray);
      margin-top: 8px;
    }

    /* Charts Section */
    .section-title {
      margin: 40px 0 20px 0;
      color: var(--dark);
      font-size: 1.5rem;
      font-weight: 600;
      display: flex;
      align-items: center;
      gap: 10px;
    }

    .charts-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
      gap: 25px;
      margin-bottom: 40px;
    }

    .chart-container {
      background: var(--card-bg);
      border-radius: 16px;
      padding: 20px;
      box-shadow: var(--shadow);
      position: relative;
    }

    .chart-title {
      font-size: 1.1rem;
      font-weight: 600;
      margin-bottom: 15px;
      color: var(--dark);
      text-align: center;
    }

    canvas {
      width: 100% !important;
      height: 300px !important;
    }

    /* Table Section */
    .table-container {
      background: var(--card-bg);
      border-radius: 16px;
      overflow: hidden;
      box-shadow: var(--shadow);
      margin-bottom: 40px;
      overflow-x: auto;
    }

    table {
      width: 100%;
      border-collapse: collapse;
      min-width: 600px;
    }

    th, td {
      padding: 16px;
      text-align: left;
      border-bottom: 1px solid #eee;
    }

    th {
      background: var(--primary);
      color: #fff;
      font-weight: 600;
      position: sticky;
      top: 0;
    }

    tr:hover {
      background: #f8f9fa;
    }

    .status-badge {
      padding: 4px 12px;
      border-radius: 20px;
      font-size: 0.8rem;
      font-weight: 500;
      text-transform: capitalize;
    }

    .status-pending { background: #fff3cd; color: #856404; }
    .status-ongoing { background: #cce7ff; color: #004085; }
    .status-completed { background: #d4edda; color: #155724; }

    .urgency-high { color: var(--secondary); font-weight: 600; }
    .urgency-medium { color: var(--warning); font-weight: 600; }
    .urgency-low { color: var(--success); font-weight: 600; }

    /* Error Message */
    .error-container {
      background: #f8d7da;
      color: #721c24;
      padding: 20px;
      border-radius: 8px;
      text-align: center;
      margin: 20px 0;
    }

    .error-icon {
      font-size: 3rem;
      margin-bottom: 15px;
    }

    /* Responsive Design */
    @media (max-width: 768px) {
      body {
        padding: 15px;
      }

      .header {
        flex-direction: column;
        text-align: center;
      }

      h1 {
        font-size: 1.8rem;
      }

      .cards {
        grid-template-columns: 1fr;
        gap: 15px;
      }

      .card {
        padding: 20px;
      }

      .card-value {
        font-size: 1.8rem;
      }

      .charts-grid {
        grid-template-columns: 1fr;
        gap: 20px;
      }

      .chart-container {
        padding: 15px;
      }

      canvas {
        height: 250px !important;
      }

      th, td {
        padding: 12px 8px;
        font-size: 0.9rem;
      }

      .admin-info {
        justify-content: center;
      }

      .nav-buttons {
        justify-content: center;
      }
    }

    @media (max-width: 480px) {
      body {
        padding: 10px;
      }

      h1 {
        font-size: 1.5rem;
      }

      .card {
        padding: 15px;
      }

      .card-value {
        font-size: 1.5rem;
      }

      .card-icon {
        font-size: 2rem;
      }

      .btn {
        padding: 6px 12px;
        font-size: 0.9rem;
      }

      th, td {
        padding: 10px 6px;
        font-size: 0.85rem;
      }
    }
  </style>
</head>
<body>
  <div class="container">
    <!-- Header -->
    <div class="header">
      <h1><i class="fas fa-chart-line"></i> <%= title %></h1>
      <div class="admin-info">
        <% if (admin) { %>
          <div class="admin-welcome">
            <i class="fas fa-user-shield"></i> Welcome, <%= admin.username %>
          </div>
        <% } %>
        <div class="nav-buttons">
          <a href="/admin" class="btn btn-primary">
            <i class="fas fa-tachometer-alt"></i> Dashboard
          </a>
          <a href="/admin/reports" class="btn btn-secondary">
            <i class="fas fa-sync-alt"></i> Refresh
          </a>
        </div>
      </div>
    </div>

    <% if (typeof error !== "undefined" && error) { %>
      <!-- Error State -->
      <div class="error-container">
        <div class="error-icon">
          <i class="fas fa-exclamation-triangle"></i>
        </div>
        <h3>Unable to Load Reports</h3>
        <p><%= error %></p>
        <a href="/admin/reports" class="btn btn-primary" style="margin-top: 15px;">
          <i class="fas fa-redo"></i> Try Again
        </a>
      </div>
    <% } else { %>

      <!-- Summary Cards -->
      <div class="cards">
        <div class="card">
          <div class="card-icon">
            <i class="fas fa-file-alt"></i>
          </div>
          <div class="card-value"><%= totalReports %></div>
          <div class="card-label">Total Reports</div>
          <div class="card-description">All time submissions</div>
        </div>

        <div class="card">
          <div class="card-icon">
            <i class="fas fa-clock"></i>
          </div>
          <div class="card-value"><%= pendingCount %></div>
          <div class="card-label">Pending</div>
          <div class="card-description">Awaiting action</div>
        </div>

        <div class="card">
          <div class="card-icon">
            <i class="fas fa-spinner"></i>
          </div>
          <div class="card-value"><%= ongoingCount %></div>
          <div class="card-label">Ongoing</div>
          <div class="card-description">Currently being addressed</div>
        </div>

        <div class="card">
          <div class="card-icon">
            <i class="fas fa-check-circle"></i>
          </div>
          <div class="card-value"><%= completedCount %></div>
          <div class="card-label">Completed</div>
          <div class="card-description">Successfully resolved</div>
        </div>

        <div class="card">
          <div class="card-icon">
            <i class="fas fa-chart-pie"></i>
          </div>
          <div class="card-value"><%= completionRate %>%</div>
          <div class="card-label">Completion Rate</div>
          <div class="card-description">Overall success rate</div>
        </div>
      </div>

      <!-- Charts Section -->
      <h2 class="section-title"><i class="fas fa-chart-bar"></i> Analytics Overview</h2>
      
      <div class="charts-grid">
        <div class="chart-container">
          <div class="chart-title">Reports by Category</div>
          <canvas id="categoryChart"></canvas>
        </div>

        <div class="chart-container">
          <div class="chart-title">Reports by Urgency Level</div>
          <canvas id="urgencyChart"></canvas>
        </div>

        <div class="chart-container">
          <div class="chart-title">Reports Trend (Last 7 Days)</div>
          <canvas id="trendChart"></canvas>
        </div>

        <div class="chart-container">
          <div class="chart-title">Status Distribution</div>
          <canvas id="statusChart"></canvas>
        </div>
      </div>

      <!-- Recent Reports Table -->
      <h2 class="section-title"><i class="fas fa-table"></i> Recent Reports</h2>
      
      <div class="table-container">
        <table>
          <thead>
            <tr>
              <th>ID</th>
              <th>Category</th>
              <th>Status</th>
              <th>Urgency</th>
              <th>Date Reported</th>
            </tr>
          </thead>
          <tbody>
            <% if (!recentReports || recentReports.length === 0) { %>
              <tr>
                <td colspan="5" style="text-align: center; padding: 40px; color: var(--gray);">
                  <i class="fas fa-inbox" style="font-size: 2rem; margin-bottom: 10px; display: block;"></i>
                  No reports found
                </td>
              </tr>
            <% } else { %>
              <% recentReports.forEach(report => { %>
                <tr>
                  <td>#<%= report.id %></td>
                  <td><%= report.category || 'Uncategorized' %></td>
                  <td>
                    <span class="status-badge status-<%= (report.status || 'pending').toLowerCase().replace(' ', '-') %>">
                      <%= report.status || 'pending' %>
                    </span>
                  </td>
                  <td class="urgency-<%= (report.urgency || 'Low').toLowerCase() %>">
                    <i class="fas fa-flag"></i> <%= report.urgency || 'Low' %>
                  </td>
                  <td>
                    <i class="far fa-calendar"></i> 
                    <%= report.created_at ? new Date(report.created_at).toLocaleDateString() : 'N/A' %>
                  </td>
                </tr>
              <% }) %>
            <% } %>
          </tbody>
        </table>
      </div>

    <% } %>
  </div>

  <!-- Chart.js -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script>
    // Data from server
    const categoryData = <%- JSON.stringify(categoryStats || []) %>;
    const urgencyData = <%- JSON.stringify(urgencyStats || []) %>;
    const statusData = <%- JSON.stringify(statusStats || []) %>;
    const trendData = <%- JSON.stringify(trendStats || []) %>;

    // Color schemes
    const categoryColors = ['#0078d7', '#ff6b6b', '#f39c12', '#2ecc71', '#9b59b6', '#1abc9c', '#e74c3c'];
    const urgencyColors = { high: '#e74c3c', medium: '#f39c12', low: '#2ecc71' };
    const statusColors = { pending: '#f39c12', ongoing: '#3498db', completed: '#2ecc71' };

    // Initialize charts when DOM is loaded
    document.addEventListener('DOMContentLoaded', function() {
      // Category Chart (Doughnut)
      if (categoryData.length > 0) {
        new Chart(document.getElementById('categoryChart'), {
          type: 'doughnut',
          data: {
            labels: categoryData.map(c => c.category || 'Unknown'),
            datasets: [{
              data: categoryData.map(c => c.count),
              backgroundColor: categoryColors,
              borderWidth: 2,
              borderColor: '#fff'
            }]
          },
          options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
              legend: {
                position: 'bottom',
                labels: { padding: 20, usePointStyle: true }
              }
            }
          }
        });
      }

      // Urgency Chart (Bar) - using your actual urgency values (High, Medium, Low)
      if (urgencyData.length > 0) {
        new Chart(document.getElementById('urgencyChart'), {
          type: 'bar',
          data: {
            labels: urgencyData.map(u => u.urgency || 'Unknown'),
            datasets: [{
              label: 'Number of Reports',
              data: urgencyData.map(u => u.count),
              backgroundColor: urgencyData.map(u => {
                const urgency = (u.urgency || 'Low').toLowerCase();
                return urgencyColors[urgency] || '#95a5a6';
              }),
              borderWidth: 0
            }]
          },
          options: {
            responsive: true,
            maintainAspectRatio: false,
            scales: {
              y: { 
                beginAtZero: true,
                ticks: { stepSize: 1 }
              }
            },
            plugins: {
              legend: { display: false }
            }
          }
        });
      }

      // Trend Chart (Line)
      if (trendData.length > 0) {
        new Chart(document.getElementById('trendChart'), {
          type: 'line',
          data: {
            labels: trendData.map(t => new Date(t.day).toLocaleDateString()),
            datasets: [{
              label: 'Reports per Day',
              data: trendData.map(t => t.count),
              borderColor: '#0078d7',
              backgroundColor: 'rgba(0, 120, 215, 0.1)',
              borderWidth: 3,
              fill: true,
              tension: 0.4
            }]
          },
          options: {
            responsive: true,
            maintainAspectRatio: false,
            scales: {
              y: { beginAtZero: true }
            }
          }
        });
      }

      // Status Chart (Pie) - using your actual status values (pending, Ongoing, Completed)
      if (statusData.length > 0) {
        new Chart(document.getElementById('statusChart'), {
          type: 'pie',
          data: {
            labels: statusData.map(s => {
              const status = s.status || 'pending';
              return status.charAt(0).toUpperCase() + status.slice(1);
            }),
            datasets: [{
              data: statusData.map(s => s.count),
              backgroundColor: statusData.map(s => {
                const status = (s.status || 'pending').toLowerCase();
                return statusColors[status] || '#95a5a6';
              }),
              borderWidth: 2,
              borderColor: '#fff'
            }]
          },
          options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
              legend: {
                position: 'bottom',
                labels: { padding: 20, usePointStyle: true }
              }
            }
          }
        });
      }
    });

    // Auto-refresh every 5 minutes
    setTimeout(() => {
      window.location.reload();
    }, 300000);
  </script>
</body>
</html>